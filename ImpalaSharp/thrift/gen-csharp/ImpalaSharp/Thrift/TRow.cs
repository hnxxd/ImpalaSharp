/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace ImpalaSharp.Thrift
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class TRow : TBase
  {

    public List<TColumnValue> ColVals { get; set; }

    public TRow() {
    }

    public TRow(List<TColumnValue> colVals) : this() {
      this.ColVals = colVals;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_colVals = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                ColVals = new List<TColumnValue>();
                TList _list46 = iprot.ReadListBegin();
                for( int _i47 = 0; _i47 < _list46.Count; ++_i47)
                {
                  TColumnValue _elem48 = new TColumnValue();
                  _elem48 = new TColumnValue();
                  _elem48.Read(iprot);
                  ColVals.Add(_elem48);
                }
                iprot.ReadListEnd();
              }
              isset_colVals = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_colVals)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("TRow");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      field.Name = "colVals";
      field.Type = TType.List;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteListBegin(new TList(TType.Struct, ColVals.Count));
        foreach (TColumnValue _iter49 in ColVals)
        {
          _iter49.Write(oprot);
        }
        oprot.WriteListEnd();
      }
      oprot.WriteFieldEnd();
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("TRow(");
      sb.Append("ColVals: ");
      sb.Append(ColVals);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
